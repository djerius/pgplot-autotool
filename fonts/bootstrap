#! /bin/sh -
# original bootstrap file, installed by starconf 1.0-8, rnum=1000008
# If you _need_ to change this file, delete or replace `original' above
# or else starconf may overwrite it with an updated version

# bootstrap.installed.  Generated from bootstrap.installed.in by configure.

# Bootstrap a checked-out component of the Starlink software tree.
# Run this script in a freshly checked-out directory to bring the
# system to the point where you can just type ./configure;make
#
# Usage:
#     ./bootstrap


# Echo a command then run it, terminating the script if the command fails
echorun() { echo $*; eval $* || exit 1; }


if starconf --show buildsupport >/dev/null 2>&1; then

    # starconf is in the path
    echo "Using starconf in " `starconf --show buildsupport` "..."
    echorun starconf

else

    # The temptation here is to use ./starconf.status to find the
    # starconf that it came from and invoke that explicitly.  Don't do
    # this, however: we don't want to be too clever, and it's better
    # to be consistent with the way the autotools behave (the first
    # one in your path is the one that works, and they don't have this
    # sort of `phone home' cleverness in them.

    echo "In directory " `pwd` " :"
    echo "The starconf application doesn't appear to be in your path"

    # This doesn't stop us being helpful, however.
    if test -x ./starconf.status; then
        starconf_home=`./starconf.status --show buildsupport`
        echo "This directory was last bootstrapped with $starconf_home/bin/starconf"
    fi

    exit 1
fi


# Bootstrap any child directories
for d in `autoconf --trace=AC_CONFIG_SUBDIRS:$% configure.ac` DUMMY
do
    if test -n "$d" -a -d "$d"; then
        echo "Bootstrapping $d..."
        (cd $d; ./bootstrap)
    fi
done


# If STAR_SUPPRESS_AUTORECONF is true in the environment, then we
# suppress the call of `autoreconf'.  This is here _only_ so that the top-level
# bootstrap file can suppress multiple calls of this in bootstrap scripts
# in its children.  This mechanism must not be used by users, as it is
# likely to change without warning.
: ${STAR_SUPPRESS_AUTORECONF=false}
if $STAR_SUPPRESS_AUTORECONF; then
    echo "Suppressing autoreconf"
else
    echorun autoreconf --install --symlink
fi


exit 0
